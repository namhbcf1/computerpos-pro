---
import BaseLayout from '../../layouts/BaseLayout.astro';
import POSLayout from '../../layouts/POSLayout.astro';
import ProductGrid from '../../components/pos/ProductGrid.astro';
import ShoppingCart from '../../components/pos/ShoppingCart.astro';
import PaymentModal from '../../components/pos/PaymentModal.astro';
import BarcodeScanner from '../../components/pos/BarcodeScanner.astro';
import CustomerDisplay from '../../components/pos/CustomerDisplay.astro';
import Button from '../../components/ui/Button.astro';
---

<BaseLayout title="POS Bán Hàng - ComputerPOS Pro">
  <POSLayout>
    <div class="h-screen flex bg-gray-100">
      <!-- Left Panel - Product Grid -->
      <div class="flex-1 flex flex-col">
        <!-- POS Header -->
        <div class="bg-white border-b border-gray-200 p-4">
          <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center space-y-4 lg:space-y-0">
            <div class="flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-4">
              <h1 class="text-xl lg:text-2xl font-bold text-gray-900">POS Bán Hàng</h1>
              <div class="flex flex-wrap items-center gap-2">
                <Button size="sm" variant="outline" onclick="addNewCustomer()">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                  </svg>
                  <span class="hidden sm:inline">Khách hàng mới</span>
                  <span class="sm:hidden">KH mới</span>
                </Button>
                <Button size="sm" variant="outline" onclick="viewHeldOrders()">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                  <span class="hidden sm:inline">Đơn giữ</span>
                  <span class="sm:hidden">Giữ</span>
                </Button>
                <Button size="sm" variant="outline" onclick="showBarcodeScanner()">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V6a1 1 0 011-1h2a1 1 0 011 1v1a1 1 0 001 1h2a1 1 0 001-1V6a1 1 0 011-1h2a1 1 0 011 1v1a1 1 0 001 1h2" />
                  </svg>
                  <span class="hidden sm:inline">Quét mã</span>
                  <span class="sm:hidden">Quét</span>
                </Button>
              </div>
            </div>
            
            <div class="flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-4">
              <!-- Search -->
              <div class="relative">
                <input
                  type="text"
                  placeholder="Tìm sản phẩm..."
                  data-search
                  class="w-full sm:w-64 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
                <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                  <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
              </div>
              
              <!-- Barcode Scanner -->
              <BarcodeScanner />
              
              <!-- Back to Dashboard -->
              <Button href="/" variant="secondary" size="sm">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Dashboard
              </Button>
            </div>
          </div>
        </div>

        <!-- Product Categories -->
        <div class="bg-white border-b border-gray-200 p-4">
          <div class="flex space-x-2 overflow-x-auto">
            <button data-category="all" class="px-4 py-2 bg-blue-600 text-white rounded-lg font-medium whitespace-nowrap">Tất cả</button>
            <button data-category="cpu" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">CPU</button>
            <button data-category="vga" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">VGA</button>
            <button data-category="ram" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">RAM</button>
            <button data-category="mainboard" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">Mainboard</button>
            <button data-category="storage" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">SSD</button>
            <button data-category="storage" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">HDD</button>
            <button data-category="case" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">Case</button>
            <button data-category="psu" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 whitespace-nowrap">PSU</button>
          </div>
        </div>

        <!-- Product Grid -->
        <div class="flex-1 overflow-auto">
          <ProductGrid />
        </div>
      </div>

      <!-- Right Panel - Shopping Cart -->
      <div class="w-full lg:w-96 bg-white border-t lg:border-t-0 lg:border-l border-gray-200 flex flex-col">
        <ShoppingCart />
      </div>
    </div>

    <!-- Customer Display (Second Screen) -->
    <div class="hidden xl:block">
      <CustomerDisplay />
    </div>

    <!-- Payment Modal -->
    <PaymentModal />
  </POSLayout>
</BaseLayout>

<script>
  // POS specific JavaScript
  document.addEventListener('DOMContentLoaded', function() {
    // Category filter functionality
    const categoryButtons = document.querySelectorAll('[data-category]');
    const productCards = document.querySelectorAll('[data-product]');
    
    categoryButtons.forEach(button => {
      button.addEventListener('click', function() {
        const category = this.getAttribute('data-category');
        
        // Update active button
        categoryButtons.forEach(btn => btn.classList.remove('bg-blue-600', 'text-white'));
        categoryButtons.forEach(btn => btn.classList.add('bg-gray-200', 'text-gray-700'));
        this.classList.remove('bg-gray-200', 'text-gray-700');
        this.classList.add('bg-blue-600', 'text-white');
        
        // Filter products
        productCards.forEach(card => {
          const productCategory = card.getAttribute('data-category');
          if (category === 'all' || productCategory === category) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
    
    // Product search functionality
    const searchInput = document.querySelector('[data-search]');
    if (searchInput) {
      searchInput.addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();

        productCards.forEach(card => {
          const productName = card.querySelector('[data-product-name]').textContent.toLowerCase();
          const productCode = card.querySelector('[data-product-code]').textContent.toLowerCase();

          if (productName.includes(searchTerm) || productCode.includes(searchTerm)) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    }

    // Category filtering functionality (merged with existing code above)
    
    // Add to cart functionality
    const addToCartButtons = document.querySelectorAll('[data-add-to-cart]');
    addToCartButtons.forEach(button => {
      button.addEventListener('click', function() {
        const productId = this.getAttribute('data-product-id');
        const productName = this.getAttribute('data-product-name');
        const productPrice = parseFloat(this.getAttribute('data-product-price'));
        
        // Add to cart logic (would interact with cart state)
        console.log('Adding to cart:', { productId, productName, productPrice });
        
        // Visual feedback
        this.textContent = 'Đã thêm!';
        this.classList.add('bg-green-600');
        setTimeout(() => {
          this.textContent = 'Thêm vào giỏ';
          this.classList.remove('bg-green-600');
        }, 1000);
      });
    });
  });

  // POS button handlers
  function addNewCustomer() {
    const customerName = prompt('Nhập tên khách hàng:');
    if (customerName) {
      const customerNameInput = document.getElementById('customer-name');
      if (customerNameInput) {
        customerNameInput.value = customerName;
      }
      alert(`Đã thêm khách hàng: ${customerName}`);
    }
  }

  function viewHeldOrders() {
    alert('Chức năng xem đơn giữ sẽ được phát triển trong phiên bản tiếp theo');
    // In real app, would show modal with held orders
  }

  // Make functions global
  window.addNewCustomer = addNewCustomer;
  window.viewHeldOrders = viewHeldOrders;
</script>
---
import BaseLayout from '../../layouts/BaseLayout.astro';
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import Card from '../../components/ui/Card.astro';
import Button from '../../components/ui/Button.astro';
---

<BaseLayout title="Quản lý sản phẩm - ComputerPOS Pro">
  <DashboardLayout>
    <main class="p-6 space-y-6">
      <!-- Header -->
      <div class="flex justify-between items-center">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">Quản lý sản phẩm</h1>
          <p class="text-gray-600 mt-1">Quản lý danh mục linh kiện máy tính và phụ kiện</p>
        </div>
        <div class="flex space-x-3">
          <Button href="/products/categories" variant="secondary">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
            Danh mục
          </Button>
          <Button href="/products/specs" variant="secondary">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            Thông số kỹ thuật
          </Button>
          <Button href="/products/add" variant="primary">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Thêm sản phẩm
          </Button>
        </div>
      </div>

      <!-- Stats Cards -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card>
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                  </svg>
                </div>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Tổng sản phẩm</dt>
                  <dd class="text-lg font-medium text-gray-900">1,247</dd>
                </dl>
              </div>
            </div>
          </div>
        </Card>

        <Card>
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Còn hàng</dt>
                  <dd class="text-lg font-medium text-gray-900">1,089</dd>
                </dl>
              </div>
            </div>
          </div>
        </Card>

        <Card>
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                  </svg>
                </div>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Sắp hết hàng</dt>
                  <dd class="text-lg font-medium text-gray-900">47</dd>
                </dl>
              </div>
            </div>
          </div>
        </Card>

        <Card>
          <div class="p-6">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </div>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 truncate">Hết hàng</dt>
                  <dd class="text-lg font-medium text-gray-900">111</dd>
                </dl>
              </div>
            </div>
          </div>
        </Card>
      </div>

      <!-- Filters and Search -->
      <Card>
        <div class="p-6">
          <div class="flex flex-col sm:flex-row gap-4">
            <div class="flex-1">
              <input
                type="text"
                placeholder="Tìm kiếm sản phẩm..."
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
            <div class="flex gap-2">
              <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">Tất cả danh mục</option>
                <option value="cpu">CPU</option>
                <option value="vga">VGA</option>
                <option value="ram">RAM</option>
                <option value="mainboard">Mainboard</option>
                <option value="storage">Ổ cứng</option>
                <option value="psu">Nguồn</option>
                <option value="case">Case</option>
                <option value="cooling">Tản nhiệt</option>
              </select>
              <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">Tình trạng</option>
                <option value="in-stock">Còn hàng</option>
                <option value="low-stock">Sắp hết</option>
                <option value="out-of-stock">Hết hàng</option>
              </select>
            </div>
          </div>
        </div>
      </Card>

      <!-- Products Table -->
      <Card>
        <div class="overflow-hidden">
          <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Danh sách sản phẩm</h3>
          </div>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Sản phẩm
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Danh mục
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Giá bán
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Tồn kho
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Trạng thái
                  </th>
                  <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Thao tác
                  </th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <!-- Sample Product Rows -->
                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        <div class="h-10 w-10 rounded-lg bg-gray-200 flex items-center justify-center">
                          <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                          </svg>
                        </div>
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">Intel Core i7-13700K</div>
                        <div class="text-sm text-gray-500">SKU: CPU-I7-13700K</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      CPU
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    12,500,000₫
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    25
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      Còn hàng
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <div class="flex justify-end space-x-2">
                      <button class="text-indigo-600 hover:text-indigo-900">Sửa</button>
                      <button class="text-red-600 hover:text-red-900">Xóa</button>
                    </div>
                  </td>
                </tr>

                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        <div class="h-10 w-10 rounded-lg bg-gray-200 flex items-center justify-center">
                          <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                          </svg>
                        </div>
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">NVIDIA RTX 4080</div>
                        <div class="text-sm text-gray-500">SKU: VGA-RTX-4080</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      VGA
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    35,000,000₫
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    8
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                      Sắp hết
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <div class="flex justify-end space-x-2">
                      <button class="text-indigo-600 hover:text-indigo-900">Sửa</button>
                      <button class="text-red-600 hover:text-red-900">Xóa</button>
                    </div>
                  </td>
                </tr>

                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        <div class="h-10 w-10 rounded-lg bg-gray-200 flex items-center justify-center">
                          <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                          </svg>
                        </div>
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">Corsair Vengeance 32GB DDR5</div>
                        <div class="text-sm text-gray-500">SKU: RAM-COR-32GB-DDR5</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                      RAM
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    4,200,000₫
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    0
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      Hết hàng
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <div class="flex justify-end space-x-2">
                      <button class="text-indigo-600 hover:text-indigo-900">Sửa</button>
                      <button class="text-red-600 hover:text-red-900">Xóa</button>
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>

          <!-- Pagination -->
          <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="flex-1 flex justify-between sm:hidden">
              <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Trước
              </button>
              <button class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Sau
              </button>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
              <div>
                <p class="text-sm text-gray-700">
                  Hiển thị <span class="font-medium">1</span> đến <span class="font-medium">10</span> của
                  <span class="font-medium">1,247</span> kết quả
                </p>
              </div>
              <div>
                <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                  <button class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Trang trước</span>
                    <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    1
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    2
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    3
                  </button>
                  <button class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Trang sau</span>
                    <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                    </svg>
                  </button>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </Card>
    </main>
  </DashboardLayout>
</BaseLayout>

<script>
  // Products page functionality
  document.addEventListener('DOMContentLoaded', function() {
    let productsData = [];
    
    // Load products data
    function loadProductsData() {
      // Simulate API call to load products
      // In real implementation, this would fetch from backend
      console.log('Loading products data...');
    }
    
    // Validate product before deletion
    function validateProductDeletion(productId, productName) {
      // Check if product has pending orders
      const hasPendingOrders = false; // Simulate check
      if (hasPendingOrders) {
        alert(`Không thể xóa sản phẩm "${productName}" vì có đơn hàng đang chờ xử lý!`);
        return false;
      }
      
      // Check if product has stock transactions
      const hasStockTransactions = false; // Simulate check
      if (hasStockTransactions) {
        alert(`Không thể xóa sản phẩm "${productName}" vì có giao dịch tồn kho!`);
        return false;
      }
      
      return true;
    }
    
    // Delete product with validation
    function deleteProduct(productId, productName, row) {
      if (!validateProductDeletion(productId, productName)) {
        return;
      }
      
      // Show loading state
      row.style.opacity = '0.5';
      const deleteButton = row.querySelector('button:contains("Xóa")');
      if (deleteButton) {
        deleteButton.disabled = true;
        deleteButton.textContent = 'Đang xóa...';
      }
      
      // Simulate API call
      setTimeout(() => {
        try {
          // Remove from data array
          productsData = productsData.filter(p => p.id !== productId);
          
          // Remove from DOM
          row.remove();
          
          // Update stats
          updateProductStats();
          
          alert('Đã xóa sản phẩm thành công!');
          console.log(`Product ${productId} deleted successfully`);
        } catch (error) {
          console.error('Error deleting product:', error);
          alert('Có lỗi xảy ra khi xóa sản phẩm!');
          
          // Restore row state
          row.style.opacity = '1';
          if (deleteButton) {
            deleteButton.disabled = false;
            deleteButton.textContent = 'Xóa';
          }
        }
      }, 1000);
    }
    
    // Update product statistics
    function updateProductStats() {
      const totalProducts = document.querySelectorAll('tbody tr').length;
      const totalProductsElement = document.querySelector('.grid .text-lg');
      if (totalProductsElement) {
        totalProductsElement.textContent = totalProducts.toLocaleString();
      }
    }
    
    // Event delegation for product actions
    document.addEventListener('click', function(e) {
      const button = e.target.closest('button');
      if (!button) return;
      
      const row = button.closest('tr');
      if (!row) return;
      
      const productName = row.querySelector('td:nth-child(2) .font-medium')?.textContent;
      const productId = row.dataset.productId || `product_${Date.now()}`;
      
      if (button.textContent.trim() === 'Sửa') {
        // Edit product
        if (confirm(`Chỉnh sửa sản phẩm: ${productName}?`)) {
          window.location.href = `/products/edit/${productId}`;
        }
      } else if (button.textContent.trim() === 'Xóa') {
        // Delete product with enhanced validation
        if (confirm(`Bạn có chắc muốn xóa sản phẩm: ${productName}?\n\nHành động này không thể hoàn tác và sẽ:\n- Xóa tất cả dữ liệu sản phẩm\n- Xóa lịch sử giao dịch\n- Ảnh hưởng đến báo cáo`)) {
          deleteProduct(productId, productName, row);
        }
      }
    });

    // Enhanced search functionality
    const searchInput = document.querySelector('input[placeholder*="Tìm kiếm"]');
    if (searchInput) {
      let searchTimeout;
      
      searchInput.addEventListener('input', function(e) {
        // Debounce search to improve performance
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          performSearch(e.target.value);
        }, 300);
      });
      
      function performSearch(searchTerm) {
        const normalizedTerm = searchTerm.toLowerCase().trim();
        const rows = document.querySelectorAll('tbody tr');
        let visibleCount = 0;
        
        rows.forEach(row => {
          const productNameEl = row.querySelector('td:nth-child(2) .font-medium');
          const productCodeEl = row.querySelector('td:nth-child(2) .text-gray-500');
          const categoryEl = row.querySelector('td:nth-child(3)');
          const priceEl = row.querySelector('td:nth-child(4)');
          
          if (!productNameEl || !productCodeEl || !categoryEl) {
            row.style.display = 'none';
            return;
          }
          
          const productName = productNameEl.textContent.toLowerCase();
          const productCode = productCodeEl.textContent.toLowerCase();
          const category = categoryEl.textContent.toLowerCase();
          const price = priceEl ? priceEl.textContent.toLowerCase() : '';
          
          const isMatch = !normalizedTerm || 
                         productName.includes(normalizedTerm) || 
                         productCode.includes(normalizedTerm) || 
                         category.includes(normalizedTerm) ||
                         price.includes(normalizedTerm);
          
          if (isMatch) {
            row.style.display = '';
            visibleCount++;
          } else {
            row.style.display = 'none';
          }
        });
        
        // Show search results count
        updateSearchResultsCount(visibleCount, rows.length);
      }
      
      function updateSearchResultsCount(visible, total) {
        let countElement = document.getElementById('search-results-count');
        if (!countElement) {
          countElement = document.createElement('div');
          countElement.id = 'search-results-count';
          countElement.className = 'text-sm text-gray-500 mt-2';
          searchInput.parentNode.appendChild(countElement);
        }
        
        if (searchInput.value.trim()) {
          countElement.textContent = `Hiển thị ${visible} / ${total} sản phẩm`;
          countElement.style.display = 'block';
        } else {
          countElement.style.display = 'none';
        }
      }
    }

    // Enhanced filter functionality
    const filterSelects = document.querySelectorAll('select');
    filterSelects.forEach(select => {
      select.addEventListener('change', function() {
        applyFilters();
      });
    });
    
    function applyFilters() {
      const categoryFilter = document.querySelector('select[id*="category"]')?.value || '';
      const stockFilter = document.querySelector('select[id*="stock"]')?.value || '';
      const rows = document.querySelectorAll('tbody tr');
      let visibleCount = 0;
      
      rows.forEach(row => {
        let shouldShow = true;
        
        // Category filter
        if (categoryFilter) {
          const categoryCell = row.querySelector('td:nth-child(3)');
          const category = categoryCell ? categoryCell.textContent.toLowerCase() : '';
          if (!category.includes(categoryFilter.toLowerCase())) {
            shouldShow = false;
          }
        }
        
        // Stock filter
        if (stockFilter && shouldShow) {
          const stockCell = row.querySelector('td:nth-child(5)');
          const stockText = stockCell ? stockCell.textContent.toLowerCase() : '';
          
          switch (stockFilter) {
            case 'in-stock':
              if (stockText.includes('hết hàng') || stockText.includes('0')) {
                shouldShow = false;
              }
              break;
            case 'low-stock':
              // Check if stock is low (assuming < 10 is low)
              const stockNumber = parseInt(stockText.match(/\d+/)?.[0] || '0');
              if (stockNumber === 0 || stockNumber > 10) {
                shouldShow = false;
              }
              break;
            case 'out-of-stock':
              if (!stockText.includes('hết hàng') && !stockText.includes('0')) {
                shouldShow = false;
              }
              break;
          }
        }
        
        if (shouldShow) {
          row.style.display = '';
          visibleCount++;
        } else {
          row.style.display = 'none';
        }
      });
      
      // Update filter results count
      updateFilterResultsCount(visibleCount, rows.length);
    }
    
    function updateFilterResultsCount(visible, total) {
      let countElement = document.getElementById('filter-results-count');
      if (!countElement) {
        countElement = document.createElement('div');
        countElement.id = 'filter-results-count';
        countElement.className = 'text-sm text-gray-500 mt-2';
        const filtersContainer = document.querySelector('.flex.flex-col.sm\\:flex-row.gap-4');
        if (filtersContainer) {
          filtersContainer.appendChild(countElement);
        }
      }
      
      const hasActiveFilters = Array.from(filterSelects).some(select => select.value);
      if (hasActiveFilters) {
        countElement.textContent = `Lọc: ${visible} / ${total} sản phẩm`;
        countElement.style.display = 'block';
      } else {
        countElement.style.display = 'none';
      }
    }

    // Enhanced pagination functionality
    const paginationButtons = document.querySelectorAll('nav button');
    paginationButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Remove active state from all buttons
        paginationButtons.forEach(btn => {
          btn.classList.remove('bg-blue-50', 'border-blue-500', 'text-blue-600');
          btn.classList.add('bg-white', 'border-gray-300', 'text-gray-700');
        });
        
        // Add active state to clicked button
        if (this.textContent.match(/^\d+$/)) {
          this.classList.remove('bg-white', 'border-gray-300', 'text-gray-700');
          this.classList.add('bg-blue-50', 'border-blue-500', 'text-blue-600');
        }
        
        // Implement pagination logic here
        const pageNumber = this.textContent;
        console.log('Page changed to:', pageNumber);
        
        // Simulate page loading
        const tableBody = document.querySelector('tbody');
        if (tableBody) {
          tableBody.style.opacity = '0.5';
          setTimeout(() => {
            tableBody.style.opacity = '1';
            // In real implementation, this would load new data
            console.log(`Loaded page ${pageNumber}`);
          }, 500);
        }
      });
    });
    
    // Initialize page
    loadProductsData();
    updateProductStats();
  });
</script>
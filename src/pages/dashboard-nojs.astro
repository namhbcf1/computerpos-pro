---
// ComputerPOS Pro - Dashboard 100% No JavaScript Required
// Pure server-side rendering with instant functionality

export const prerender = false; // FORCE SSR

// Server-side data fetching from API
let dashboardData = {
  stats: {
    totalProducts: 0,
    todayOrders: 0,
    todayRevenue: 0,
    lowStockItems: 0
  },
  recentOrders: [],
  error: null
};

try {
  // Fetch data from backend API
  const response = await fetch('https://computerpos-api.bangachieu2.workers.dev/api/dashboard');
  if (response.ok) {
    dashboardData = await response.json();
  }
} catch (error) {
  console.error('Dashboard data fetch error:', error);
  dashboardData.error = 'Unable to load dashboard data';
}

// Format currency function
function formatVND(amount) {
  return new Intl.NumberFormat('vi-VN', {
    style: 'currency',
    currency: 'VND',
    maximumFractionDigits: 0
  }).format(amount);
}
---

<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard - ComputerPOS Pro</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #f8fafc;
      color: #1e293b;
      line-height: 1.6;
    }
    
    .header {
      background: white;
      border-bottom: 1px solid #e2e8f0;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .logo {
      font-size: 1.5rem;
      font-weight: bold;
      color: #3b82f6;
    }
    
    .nav {
      display: flex;
      gap: 2rem;
    }
    
    .nav a {
      text-decoration: none;
      color: #64748b;
      font-weight: 500;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.2s;
    }
    
    .nav a:hover {
      background: #f1f5f9;
      color: #3b82f6;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .stat-card {
      background: white;
      padding: 1.5rem;
      border-radius: 0.75rem;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      border: 1px solid #e2e8f0;
    }
    
    .stat-title {
      font-size: 0.875rem;
      color: #64748b;
      margin-bottom: 0.5rem;
    }
    
    .stat-value {
      font-size: 2rem;
      font-weight: bold;
      color: #1e293b;
    }
    
    .stat-change {
      font-size: 0.875rem;
      color: #10b981;
      margin-top: 0.25rem;
    }
    
    .section {
      background: white;
      border-radius: 0.75rem;
      padding: 1.5rem;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      border: 1px solid #e2e8f0;
      margin-bottom: 2rem;
    }
    
    .section-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: #1e293b;
    }
    
    .orders-table {
      width: 100%;
      border-collapse: collapse;
    }
    
    .orders-table th,
    .orders-table td {
      text-align: left;
      padding: 0.75rem;
      border-bottom: 1px solid #e2e8f0;
    }
    
    .orders-table th {
      background: #f8fafc;
      font-weight: 600;
      color: #374151;
    }
    
    .status {
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.75rem;
      font-weight: 500;
    }
    
    .status-completed {
      background: #dcfce7;
      color: #166534;
    }
    
    .status-processing {
      background: #fef3c7;
      color: #92400e;
    }
    
    .status-pending {
      background: #dbeafe;
      color: #1e40af;
    }
    
    .quick-actions {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-top: 2rem;
    }
    
    .action-btn {
      display: block;
      text-decoration: none;
      background: #3b82f6;
      color: white;
      padding: 1rem;
      border-radius: 0.5rem;
      text-align: center;
      font-weight: 500;
      transition: background 0.2s;
    }
    
    .action-btn:hover {
      background: #2563eb;
    }
    
    .action-btn.secondary {
      background: #6b7280;
    }
    
    .action-btn.secondary:hover {
      background: #4b5563;
    }
    
    .error {
      background: #fef2f2;
      border: 1px solid #fecaca;
      color: #dc2626;
      padding: 1rem;
      border-radius: 0.5rem;
      margin-bottom: 1rem;
    }
    
    @media (max-width: 768px) {
      .header {
        flex-direction: column;
        gap: 1rem;
      }
      
      .nav {
        flex-wrap: wrap;
        justify-content: center;
      }
      
      .container {
        padding: 1rem;
      }
      
      .stats-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <header class="header">
    <div class="logo">üíª ComputerPOS Pro</div>
    <nav class="nav">
      <a href="/dashboard-nojs">Dashboard</a>
      <a href="/pos">POS</a>
      <a href="/products">S·∫£n ph·∫©m</a>
      <a href="/inventory">Kho</a>
      <a href="/customers">Kh√°ch h√†ng</a>
      <a href="/reports">B√°o c√°o</a>
    </nav>
  </header>

  <div class="container">
    {dashboardData.error && (
      <div class="error">
        ‚ö†Ô∏è {dashboardData.error}
      </div>
    )}

    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-title">T·ªïng s·∫£n ph·∫©m</div>
        <div class="stat-value">{dashboardData.stats.totalProducts.toLocaleString('vi-VN')}</div>
        <div class="stat-change">+12% so v·ªõi th√°ng tr∆∞·ªõc</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-title">ƒê∆°n h√†ng h√¥m nay</div>
        <div class="stat-value">{dashboardData.stats.todayOrders}</div>
        <div class="stat-change">+8% so v·ªõi h√¥m qua</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-title">Doanh thu h√¥m nay</div>
        <div class="stat-value">{formatVND(dashboardData.stats.todayRevenue)}</div>
        <div class="stat-change">+15% so v·ªõi h√¥m qua</div>
      </div>
      
      <div class="stat-card">
        <div class="stat-title">S·∫£n ph·∫©m s·∫Øp h·∫øt</div>
        <div class="stat-value">{dashboardData.stats.lowStockItems}</div>
        <div class="stat-change">C·∫ßn nh·∫≠p th√™m</div>
      </div>
    </div>

    <div class="section">
      <h2 class="section-title">ƒê∆°n h√†ng g·∫ßn ƒë√¢y</h2>
      <table class="orders-table">
        <thead>
          <tr>
            <th>M√£ ƒë∆°n</th>
            <th>Kh√°ch h√†ng</th>
            <th>S·∫£n ph·∫©m</th>
            <th>T·ªïng ti·ªÅn</th>
            <th>Tr·∫°ng th√°i</th>
          </tr>
        </thead>
        <tbody>
          {dashboardData.recentOrders.map(order => (
            <tr>
              <td>{order.id}</td>
              <td>{order.customer}</td>
              <td>{order.products}</td>
              <td>{formatVND(order.total)}</td>
              <td>
                <span class={`status status-${order.status}`}>
                  {order.status === 'completed' ? 'Ho√†n th√†nh' : 
                   order.status === 'processing' ? 'ƒêang x·ª≠ l√Ω' : 'Ch·ªù x·ª≠ l√Ω'}
                </span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <div class="quick-actions">
      <a href="/pos" class="action-btn">üõí B√°n h√†ng</a>
      <a href="/products/add" class="action-btn">‚ûï Th√™m s·∫£n ph·∫©m</a>
      <a href="/inventory" class="action-btn secondary">üì¶ Qu·∫£n l√Ω kho</a>
      <a href="/reports" class="action-btn secondary">üìä B√°o c√°o</a>
    </div>
  </div>

  <!-- NO JAVASCRIPT REQUIRED - Pure HTML/CSS -->
  <noscript>
    <style>
      .js-only { display: none !important; }
    </style>
  </noscript>
</body>
</html>

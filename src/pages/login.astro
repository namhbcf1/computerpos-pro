---
// ComputerPOS Pro - Login Page (Progressive Enhancement)
// Works without JavaScript, enhanced with JavaScript

export const prerender = false; // SSR for authentication handling

// Handle form submission on server-side
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const username = formData.get('username')?.toString();
    const password = formData.get('password')?.toString();

    if (username && password) {
      // Call our login API
      const response = await fetch('https://computerpos-api.bangachieu2.workers.dev/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
      });

      if (response.ok) {
        const { token, user } = await response.json();

        // Set cookie and redirect
        Astro.cookies.set('auth-token', token, {
          httpOnly: true,
          secure: true,
          path: '/',
          maxAge: 86400
        });

        return Astro.redirect('/dashboard');
      }
    }
  } catch (error) {
    console.error('Login error:', error);
  }
}
---

<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ƒêƒÉng nh·∫≠p - ComputerPOS Pro</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 1rem;
    }

    .login-container {
      background: white;
      border-radius: 20px;
      padding: 3rem;
      box-shadow: 0 20px 40px rgba(0,0,0,0.1);
      width: 100%;
      max-width: 400px;
    }

    .logo {
      text-align: center;
      font-size: 2rem;
      font-weight: bold;
      color: #667eea;
      margin-bottom: 2rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: #333;
    }

    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 1rem;
      border: 2px solid #e1e5e9;
      border-radius: 10px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
    }

    input[type="text"]:focus,
    input[type="password"]:focus {
      outline: none;
      border-color: #667eea;
    }

    .btn {
      width: 100%;
      padding: 1rem;
      background: #667eea;
      color: white;
      border: none;
      border-radius: 10px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .btn:hover {
      background: #5a6fd8;
    }

    .btn:active {
      transform: translateY(1px);
    }

    .links {
      text-align: center;
      margin-top: 2rem;
    }

    .links a {
      color: #667eea;
      text-decoration: none;
      font-weight: 500;
    }

    .links a:hover {
      text-decoration: underline;
    }

    .demo-info {
      background: #f8f9fa;
      padding: 1rem;
      border-radius: 10px;
      margin-bottom: 2rem;
      font-size: 0.9rem;
      color: #666;
    }

    .demo-info strong {
      color: #333;
    }

    .error {
      background: #f8d7da;
      color: #721c24;
      padding: 1rem;
      border-radius: 10px;
      margin-bottom: 1rem;
      font-size: 0.9rem;
    }

    .loading {
      display: none;
      text-align: center;
      margin-top: 1rem;
      color: #666;
    }

    @media (max-width: 480px) {
      .login-container {
        padding: 2rem;
      }

      .logo {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <div class="login-container">
    <div class="logo">üíª ComputerPOS Pro</div>

    <div class="demo-info">
      <strong>Demo Login:</strong><br>
      Username: <strong>admin</strong><br>
      Password: <strong>admin123</strong>
    </div>

    <form method="POST" id="loginForm">
      <div class="form-group">
        <label for="username">T√™n ƒëƒÉng nh·∫≠p</label>
        <input
          type="text"
          id="username"
          name="username"
          required
          autocomplete="username"
          placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p"
        >
      </div>

      <div class="form-group">
        <label for="password">M·∫≠t kh·∫©u</label>
        <input
          type="password"
          id="password"
          name="password"
          required
          autocomplete="current-password"
          placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
        >
      </div>

      <button type="submit" class="btn">
        <span class="btn-text">ƒêƒÉng nh·∫≠p</span>
      </button>

      <div class="loading">
        ƒêang ƒëƒÉng nh·∫≠p...
      </div>
    </form>


    <div class="links">
      <a href="/welcome">‚Üê Quay l·∫°i trang ch·ªß</a>
    </div>
  </div>

  <script>
    // Progressive enhancement - only runs if JavaScript is available
    document.getElementById('loginForm').addEventListener('submit', async function(e) {
      e.preventDefault();

      const form = e.target;
      const formData = new FormData(form);
      const submitBtn = form.querySelector('.btn');
      const btnText = form.querySelector('.btn-text');
      const loading = form.querySelector('.loading');

      // Show loading state
      submitBtn.disabled = true;
      btnText.textContent = 'ƒêang ƒëƒÉng nh·∫≠p...';
      loading.style.display = 'block';

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            username: formData.get('username'),
            password: formData.get('password')
          })
        });

        const result = await response.json();

        if (result.success) {
          window.location.href = '/dashboard';
        } else {
          // Show error
          let errorDiv = form.querySelector('.error');
          if (!errorDiv) {
            errorDiv = document.createElement('div');
            errorDiv.className = 'error';
            form.insertBefore(errorDiv, form.firstChild);
          }
          errorDiv.textContent = result.error || 'ƒêƒÉng nh·∫≠p th·∫•t b·∫°i';
        }
      } catch (error) {
        console.error('Login error:', error);
        // Fallback to form submission
        form.submit();
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        btnText.textContent = 'ƒêƒÉng nh·∫≠p';
        loading.style.display = 'none';
      }
    });
  </script>
</body>
</html>

---
import ModernHeader from '../components/layout/ModernHeader.astro';
import ModernSidebar from '../components/layout/ModernSidebar.astro';
import '../styles/smart-ui.css';
---

<div class="min-h-screen relative bg-gradient-to-br from-gray-900 via-slate-800 to-gray-900">
  <!-- 3D Animated Background -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none z-0">
    <div class="absolute -top-40 -right-40 w-96 h-96 bg-purple-500 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob"></div>
    <div class="absolute -bottom-40 -left-40 w-96 h-96 bg-blue-500 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-2000"></div>
    <div class="absolute top-40 left-40 w-96 h-96 bg-pink-500 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-4000"></div>
    
    <!-- Modern Grid Lines -->
    <div class="absolute inset-0 bg-grid-white/[0.02] bg-[length:50px_50px] z-0"></div>
  </div>
  
  <!-- Header -->
  <ModernHeader />
  
  <div class="flex relative z-10">
    <!-- Sidebar -->
    <ModernSidebar />
    
    <!-- Main Content -->
    <main class="flex-1 p-6 ml-64 transition-all duration-300 pt-24">
      <div class="max-w-7xl mx-auto">
        <!-- Glass Container for Content -->
        <div class="backdrop-blur-md bg-white/10 rounded-2xl shadow-2xl border border-white/20 p-6 transition-all hover:shadow-blue-500/10 animate-fade-in">
        <slot />
        </div>
      </div>
    </main>
  </div>
</div>

<style>
  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }
  
  .animate-blob {
    animation: blob 20s infinite;
  }
  
  .animation-delay-2000 {
    animation-delay: 6s;
  }
  
  .animation-delay-4000 {
    animation-delay: 12s;
  }
  
  @keyframes fade-in {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 0.5s ease-out forwards;
  }
  
  /* Grid background */
  .bg-grid-white {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='%23ffffff'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e");
  }
</style>

<script>
  // Intersection Observer for scroll animations
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('.card, .chart-container, .table-container').forEach(el => {
      observer.observe(el);
    });
  });
</script>
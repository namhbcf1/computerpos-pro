---
// Shopping Cart Component for POS
---

<div class="h-full flex flex-col bg-white border-l border-gray-200">
  <!-- Cart Header -->
  <div class="p-4 border-b border-gray-200">
    <div class="flex items-center justify-between">
      <h2 class="text-lg font-semibold text-gray-900">Giỏ hàng</h2>
      <button id="clear-cart" class="text-red-600 hover:text-red-800 text-sm">
        Xóa tất cả
      </button>
    </div>
  </div>

  <!-- Customer Info -->
  <div class="p-4 border-b border-gray-200">
    <div class="flex items-center space-x-2">
      <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
      </svg>
      <input
        type="text"
        placeholder="Tên khách hàng..."
        class="flex-1 text-sm border-none focus:ring-0 p-0"
        id="customer-name"
        maxlength="100"
        pattern="[a-zA-ZÀ-ỹ\s]+"
        title="Chỉ được nhập chữ cái và khoảng trắng"
      />
    </div>
    <div class="flex items-center space-x-2 mt-2">
      <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
      </svg>
      <input
        type="tel"
        placeholder="Số điện thoại..."
        class="flex-1 text-sm border-none focus:ring-0 p-0"
        id="customer-phone"
        pattern="[0-9]{10,11}"
        title="Số điện thoại phải có 10-11 chữ số"
        maxlength="11"
      />
    </div>
  </div>

  <!-- Cart Items -->
  <div class="flex-1 overflow-y-auto" id="cart-items">
    <div class="p-4 text-center text-gray-500">
      <svg class="w-12 h-12 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5-6m0 0L4 5M7 13h10m0 0l1.5 6M17 13l1.5 6" />
      </svg>
      <p class="text-sm">Giỏ hàng trống</p>
      <p class="text-xs text-gray-400">Chọn sản phẩm để thêm vào giỏ</p>
    </div>
  </div>

  <!-- Cart Summary -->
  <div class="border-t border-gray-200 p-4 space-y-3">
    <!-- Subtotal -->
    <div class="flex justify-between text-sm">
      <span class="text-gray-600">Tạm tính:</span>
      <span id="subtotal">0₫</span>
    </div>

    <!-- Discount -->
    <div class="flex justify-between text-sm">
      <span class="text-gray-600">Giảm giá:</span>
      <div class="flex items-center space-x-2">
        <input
          type="number"
          placeholder="0"
          min="0"
          max="100"
          step="0.01"
          class="w-16 text-right text-sm border border-gray-300 rounded px-2 py-1"
          id="discount-amount"
        />
        <select class="text-sm border border-gray-300 rounded px-2 py-1" id="discount-type">
          <option value="amount">₫</option>
          <option value="percent">%</option>
        </select>
      </div>
    </div>

    <!-- Tax -->
    <div class="flex justify-between text-sm">
      <span class="text-gray-600">Thuế VAT (10%):</span>
      <span id="tax-amount">0₫</span>
    </div>

    <!-- Total -->
    <div class="flex justify-between text-lg font-bold border-t pt-3">
      <span>Tổng cộng:</span>
      <span id="total-amount" class="text-blue-600">0₫</span>
    </div>

    <!-- Payment Buttons -->
    <div class="space-y-2 pt-3">
      <button
        id="payment-cash"
        class="w-full bg-green-600 text-white py-3 rounded-lg font-medium hover:bg-green-700 transition-colors"
      >
        Thanh toán tiền mặt
      </button>
      <button
        id="payment-card"
        class="w-full bg-blue-600 text-white py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors"
      >
        Thanh toán thẻ
      </button>
      <button
        id="hold-order"
        class="w-full bg-gray-600 text-white py-2 rounded-lg font-medium hover:bg-gray-700 transition-colors"
      >
        Giữ đơn hàng
      </button>
    </div>
  </div>
</div>

<script>
  // Shopping cart functionality
  let cart = [];
  let subtotal = 0;
  let discount = 0;
  let discountType = 'amount';
  let tax = 0;
  let total = 0;

  // Listen for add to cart events
  document.addEventListener('addToCart', function(event) {
    const product = event.detail;
    addToCart(product);
  });

  function addToCart(product) {
    const existingItem = cart.find(item => item.id === product.id);

    if (existingItem) {
      existingItem.quantity += 1;
    } else {
      cart.push({
        ...product,
        quantity: 1,
        price: parseFloat(product.price.replace(/[₫,]/g, ''))
      });
    }

    updateCartDisplay();
    calculateTotals();
  }

  function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCartDisplay();
    calculateTotals();
  }

  function updateQuantity(productId, newQuantity) {
    const item = cart.find(item => item.id === productId);
    if (item) {
      if (newQuantity <= 0) {
        removeFromCart(productId);
      } else {
        item.quantity = newQuantity;
        updateCartDisplay();
        calculateTotals();
      }
    }
  }

  function updateCartDisplay() {
    const cartItemsContainer = document.getElementById('cart-items');

    if (cart.length === 0) {
      cartItemsContainer.innerHTML = `
        <div class="p-4 text-center text-gray-500">
          <svg class="w-12 h-12 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5-6m0 0L4 5M7 13h10m0 0l1.5 6M17 13l1.5 6" />
          </svg>
          <p class="text-sm">Giỏ hàng trống</p>
          <p class="text-xs text-gray-400">Chọn sản phẩm để thêm vào giỏ</p>
        </div>
      `;
      return;
    }

    const cartHTML = cart.map(item => `
      <div class="p-3 border-b border-gray-100" data-product-id="${item.id}">
        <div class="flex justify-between items-start mb-2">
          <h4 class="text-sm font-medium text-gray-900 flex-1 pr-2">${item.name}</h4>
          <button onclick="removeFromCart('${item.id}')" class="text-red-500 hover:text-red-700">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-2">
            <button onclick="updateQuantity('${item.id}', ${item.quantity - 1})" class="w-6 h-6 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 hover:bg-gray-300">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
              </svg>
            </button>
            <span class="text-sm font-medium w-8 text-center">${item.quantity}</span>
            <button onclick="updateQuantity('${item.id}', ${item.quantity + 1})" class="w-6 h-6 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 hover:bg-gray-300">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </button>
          </div>
          <span class="text-sm font-bold text-blue-600">${formatCurrency(item.price * item.quantity)}</span>
        </div>
      </div>
    `).join('');

    cartItemsContainer.innerHTML = cartHTML;
  }

  function calculateTotals() {
    subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    // Calculate discount
    const discountAmount = parseFloat(document.getElementById('discount-amount')?.value || 0);
    const discountTypeValue = document.getElementById('discount-type')?.value || 'amount';

    if (discountTypeValue === 'percent') {
      discount = subtotal * (discountAmount / 100);
    } else {
      discount = discountAmount;
    }

    // Calculate tax (10% VAT)
    tax = (subtotal - discount) * 0.1;

    // Calculate total
    total = subtotal - discount + tax;

    // Update display
    document.getElementById('subtotal').textContent = formatCurrency(subtotal);
    document.getElementById('tax-amount').textContent = formatCurrency(tax);
    document.getElementById('total-amount').textContent = formatCurrency(total);
  }

  function formatCurrency(amount) {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
      minimumFractionDigits: 0
    }).format(amount).replace('₫', '') + '₫';
  }

  // Event listeners
  document.getElementById('clear-cart')?.addEventListener('click', function() {
    if (confirm('Bạn có chắc muốn xóa tất cả sản phẩm trong giỏ hàng?')) {
      cart = [];
      updateCartDisplay();
      calculateTotals();
    }
  });

  document.getElementById('discount-amount')?.addEventListener('input', calculateTotals);
  document.getElementById('discount-type')?.addEventListener('change', calculateTotals);

  // Payment buttons
  document.getElementById('payment-cash')?.addEventListener('click', function() {
    if (cart.length === 0) {
      alert('Giỏ hàng trống!');
      return;
    }
    // Handle cash payment
    alert('Xử lý thanh toán tiền mặt...');
  });

  document.getElementById('payment-card')?.addEventListener('click', function() {
    if (cart.length === 0) {
      alert('Giỏ hàng trống!');
      return;
    }
    // Handle card payment
    alert('Xử lý thanh toán thẻ...');
  });

  document.getElementById('hold-order')?.addEventListener('click', function() {
    if (cart.length === 0) {
      alert('Giỏ hàng trống!');
      return;
    }
    // Handle hold order
    alert('Đơn hàng đã được giữ lại!');
  });

  // Make functions global for onclick handlers
  window.removeFromCart = removeFromCart;
  window.updateQuantity = updateQuantity;
</script>
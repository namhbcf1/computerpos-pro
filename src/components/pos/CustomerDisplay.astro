---
// Customer Display Component for POS
---

<div class="bg-gray-900 text-white p-6 rounded-lg">
  <!-- Header -->
  <div class="text-center mb-6">
    <h2 class="text-2xl font-bold mb-2">ComputerPOS Pro</h2>
    <p class="text-gray-300">M√†n h√¨nh kh√°ch h√†ng</p>
  </div>

  <!-- Current Item -->
  <div id="customer-current-item" class="bg-gray-800 rounded-lg p-4 mb-6">
    <div class="text-center">
      <div id="current-item-display" class="hidden">
        <h3 id="current-item-name" class="text-xl font-semibold mb-2"></h3>
        <div class="text-3xl font-bold text-green-400 mb-2" id="current-item-price"></div>
        <div class="text-sm text-gray-400">
          S·ªë l∆∞·ª£ng: <span id="current-item-quantity">1</span>
        </div>
      </div>
      <div id="welcome-message" class="py-8">
        <svg class="w-16 h-16 mx-auto mb-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l-1 12H6L5 9z" />
        </svg>
        <h3 class="text-xl font-semibold mb-2">Ch√†o m·ª´ng qu√Ω kh√°ch!</h3>
        <p class="text-gray-400">C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ ƒë·∫øn v·ªõi ComputerPOS Pro</p>
      </div>
    </div>
  </div>

  <!-- Cart Summary -->
  <div class="bg-gray-800 rounded-lg p-4 mb-6">
    <h4 class="text-lg font-semibold mb-3">T√≥m t·∫Øt ƒë∆°n h√†ng</h4>
    <div class="space-y-2">
      <div class="flex justify-between">
        <span class="text-gray-400">S·ªë l∆∞·ª£ng s·∫£n ph·∫©m:</span>
        <span id="customer-item-count">0</span>
      </div>
      <div class="flex justify-between">
        <span class="text-gray-400">T·∫°m t√≠nh:</span>
        <span id="customer-subtotal">0‚Ç´</span>
      </div>
      <div class="flex justify-between">
        <span class="text-gray-400">Gi·∫£m gi√°:</span>
        <span id="customer-discount">0‚Ç´</span>
      </div>
      <div class="flex justify-between">
        <span class="text-gray-400">Thu·∫ø VAT:</span>
        <span id="customer-tax">0‚Ç´</span>
      </div>
      <hr class="border-gray-600">
      <div class="flex justify-between text-xl font-bold">
        <span>T·ªïng c·ªông:</span>
        <span id="customer-total" class="text-green-400">0‚Ç´</span>
      </div>
    </div>
  </div>

  <!-- Promotions/Ads -->
  <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-4 text-center">
    <h4 class="text-lg font-semibold mb-2">üéâ Khuy·∫øn m√£i ƒë·∫∑c bi·ªát!</h4>
    <p class="text-sm mb-2">Mua CPU + VGA gi·∫£m ngay 5%</p>
    <p class="text-xs text-blue-200">√Åp d·ª•ng cho t·∫•t c·∫£ s·∫£n ph·∫©m Intel & NVIDIA</p>
  </div>

  <!-- Footer -->
  <div class="text-center mt-6 text-sm text-gray-400">
    <p>Hotline: 1900-1234 | Website: computerpos.vn</p>
    <p class="mt-1">C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ mua s·∫Øm t·∫°i ComputerPOS Pro!</p>
  </div>
</div>

<script>
  // Customer display functionality
  let customerDisplayData = {
    itemCount: 0,
    subtotal: 0,
    discount: 0,
    tax: 0,
    total: 0
  };

  function updateCustomerDisplay(data) {
    customerDisplayData = { ...customerDisplayData, ...data };

    // Update item count
    document.getElementById('customer-item-count').textContent = customerDisplayData.itemCount;

    // Update amounts
    document.getElementById('customer-subtotal').textContent = formatCurrency(customerDisplayData.subtotal);
    document.getElementById('customer-discount').textContent = formatCurrency(customerDisplayData.discount);
    document.getElementById('customer-tax').textContent = formatCurrency(customerDisplayData.tax);
    document.getElementById('customer-total').textContent = formatCurrency(customerDisplayData.total);
  }

  function showCurrentItem(item) {
    // Hide welcome message
    document.getElementById('welcome-message').classList.add('hidden');

    // Show current item
    const currentItemDisplay = document.getElementById('current-item-display');
    currentItemDisplay.classList.remove('hidden');

    // Update item details
    document.getElementById('current-item-name').textContent = item.name;
    document.getElementById('current-item-price').textContent = item.price;
    document.getElementById('current-item-quantity').textContent = item.quantity || 1;

    // Auto-hide after 3 seconds
    setTimeout(() => {
      hideCurrentItem();
    }, 3000);
  }

  function hideCurrentItem() {
    document.getElementById('current-item-display').classList.add('hidden');
    document.getElementById('welcome-message').classList.remove('hidden');
  }

  function formatCurrency(amount) {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
      minimumFractionDigits: 0
    }).format(amount).replace('‚Ç´', '') + '‚Ç´';
  }

  // Listen for cart updates
  document.addEventListener('addToCart', function(event) {
    const item = event.detail;
    showCurrentItem(item);
  });

  // Listen for cart summary updates
  document.addEventListener('updateCustomerDisplay', function(event) {
    updateCustomerDisplay(event.detail);
  });

  // Promotional messages rotation
  const promotions = [
    {
      title: "üéâ Khuy·∫øn m√£i ƒë·∫∑c bi·ªát!",
      content: "Mua CPU + VGA gi·∫£m ngay 5%",
      subtitle: "√Åp d·ª•ng cho t·∫•t c·∫£ s·∫£n ph·∫©m Intel & NVIDIA"
    },
    {
      title: "üíª Build PC tr·ªçn g√≥i",
      content: "T·∫∑ng Windows b·∫£n quy·ªÅn",
      subtitle: "Khi mua ƒë·ªß linh ki·ªán build PC"
    },
    {
      title: "üöö Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn",
      content: "ƒê∆°n h√†ng t·ª´ 10 tri·ªáu",
      subtitle: "√Åp d·ª•ng trong n·ªôi th√†nh TP.HCM"
    },
    {
      title: "üîß B·∫£o h√†nh t·∫≠n n∆°i",
      content: "Mi·ªÖn ph√≠ 2 nƒÉm ƒë·∫ßu",
      subtitle: "Cho t·∫•t c·∫£ s·∫£n ph·∫©m ch√≠nh h√£ng"
    }
  ];

  let currentPromotionIndex = 0;

  function rotatePromotions() {
    const promotion = promotions[currentPromotionIndex];
    const promoElement = document.querySelector('.bg-gradient-to-r');

    if (promoElement) {
      promoElement.innerHTML = `
        <h4 class="text-lg font-semibold mb-2">${promotion.title}</h4>
        <p class="text-sm mb-2">${promotion.content}</p>
        <p class="text-xs text-blue-200">${promotion.subtitle}</p>
      `;
    }

    currentPromotionIndex = (currentPromotionIndex + 1) % promotions.length;
  }

  // Rotate promotions every 5 seconds
  setInterval(rotatePromotions, 5000);

  // Make functions global
  window.updateCustomerDisplay = updateCustomerDisplay;
  window.showCurrentItem = showCurrentItem;
</script>
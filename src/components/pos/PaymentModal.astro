---
// Payment Modal Component for POS
---

<div id="payment-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">
  <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
    <!-- Modal Header -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200">
      <h3 class="text-lg font-semibold text-gray-900">Thanh toán</h3>
      <button id="close-payment-modal" class="text-gray-400 hover:text-gray-600">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <!-- Modal Body -->
    <div class="p-6">
      <!-- Payment Summary -->
      <div class="bg-gray-50 rounded-lg p-4 mb-6">
        <div class="flex justify-between text-sm mb-2">
          <span class="text-gray-600">Tạm tính:</span>
          <span id="modal-subtotal">0₫</span>
        </div>
        <div class="flex justify-between text-sm mb-2">
          <span class="text-gray-600">Giảm giá:</span>
          <span id="modal-discount">0₫</span>
        </div>
        <div class="flex justify-between text-sm mb-2">
          <span class="text-gray-600">Thuế VAT:</span>
          <span id="modal-tax">0₫</span>
        </div>
        <div class="flex justify-between text-lg font-bold border-t pt-2">
          <span>Tổng cộng:</span>
          <span id="modal-total" class="text-blue-600">0₫</span>
        </div>
      </div>

      <!-- Payment Method -->
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-3">Phương thức thanh toán</label>
        <div class="space-y-2">
          <label class="flex items-center">
            <input type="radio" name="payment-method" value="cash" class="mr-3" checked>
            <span class="flex items-center">
              <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
              Tiền mặt
            </span>
          </label>
          <label class="flex items-center">
            <input type="radio" name="payment-method" value="card" class="mr-3">
            <span class="flex items-center">
              <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
              </svg>
              Thẻ tín dụng/ghi nợ
            </span>
          </label>
          <label class="flex items-center">
            <input type="radio" name="payment-method" value="transfer" class="mr-3">
            <span class="flex items-center">
              <svg class="w-5 h-5 mr-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
              </svg>
              Chuyển khoản
            </span>
          </label>
        </div>
      </div>

      <!-- Cash Payment Details -->
      <div id="cash-payment" class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Tiền khách đưa</label>
        <input
          type="number"
          id="cash-received"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          placeholder="Nhập số tiền..."
          min="0"
          step="1000"
          required
        />
        <div class="mt-2 text-sm">
          <div class="flex justify-between">
            <span class="text-gray-600">Tiền thừa:</span>
            <span id="change-amount" class="font-medium">0₫</span>
          </div>
        </div>
      </div>

      <!-- Card Payment Details -->
      <div id="card-payment" class="mb-6 hidden">
        <div class="text-center py-8">
          <svg class="w-16 h-16 mx-auto mb-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
          </svg>
          <p class="text-lg font-medium text-gray-900 mb-2">Chờ khách hàng thanh toán</p>
          <p class="text-sm text-gray-600">Vui lòng chờ khách hàng thực hiện thanh toán qua thẻ</p>
        </div>
      </div>

      <!-- Transfer Payment Details -->
      <div id="transfer-payment" class="mb-6 hidden">
        <div class="text-center py-8">
          <svg class="w-16 h-16 mx-auto mb-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
          </svg>
          <p class="text-lg font-medium text-gray-900 mb-2">Chuyển khoản ngân hàng</p>
          <p class="text-sm text-gray-600 mb-4">Khách hàng chuyển khoản theo thông tin:</p>
          <div class="bg-gray-50 rounded-lg p-4 text-left">
            <div class="text-sm space-y-1">
              <div><strong>Ngân hàng:</strong> Vietcombank</div>
              <div><strong>Số tài khoản:</strong> 1234567890</div>
              <div><strong>Chủ tài khoản:</strong> ComputerPOS Pro</div>
              <div><strong>Nội dung:</strong> Thanh toan don hang</div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal Footer -->
    <div class="flex space-x-3 p-6 border-t border-gray-200">
      <button
        id="cancel-payment"
        class="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
      >
        Hủy
      </button>
      <button
        id="confirm-payment"
        class="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
      >
        Xác nhận thanh toán
      </button>
    </div>
  </div>
</div>

<script>
  // Payment modal functionality
  let currentPaymentData = {};

  function showPaymentModal(paymentData) {
    currentPaymentData = paymentData;

    // Update modal with payment data
    document.getElementById('modal-subtotal').textContent = formatCurrency(paymentData.subtotal);
    document.getElementById('modal-discount').textContent = formatCurrency(paymentData.discount);
    document.getElementById('modal-tax').textContent = formatCurrency(paymentData.tax);
    document.getElementById('modal-total').textContent = formatCurrency(paymentData.total);

    // Show modal
    document.getElementById('payment-modal').classList.remove('hidden');

    // Focus on cash input
    document.getElementById('cash-received').focus();
  }

  function hidePaymentModal() {
    document.getElementById('payment-modal').classList.add('hidden');
    // Reset form
    document.getElementById('cash-received').value = '';
    document.getElementById('change-amount').textContent = '0₫';
    document.querySelector('input[name="payment-method"][value="cash"]').checked = true;
    showPaymentMethod('cash');
  }

  function showPaymentMethod(method) {
    // Hide all payment method details
    document.getElementById('cash-payment').classList.add('hidden');
    document.getElementById('card-payment').classList.add('hidden');
    document.getElementById('transfer-payment').classList.add('hidden');

    // Show selected payment method
    document.getElementById(method + '-payment').classList.remove('hidden');
  }

  function calculateChange() {
    const cashReceived = parseFloat(document.getElementById('cash-received').value) || 0;
    const total = currentPaymentData.total || 0;
    const change = cashReceived - total;

    document.getElementById('change-amount').textContent = formatCurrency(Math.max(0, change));

    // Enable/disable confirm button based on sufficient payment
    const confirmButton = document.getElementById('confirm-payment');
    if (cashReceived >= total) {
      confirmButton.disabled = false;
      confirmButton.classList.remove('opacity-50', 'cursor-not-allowed');
    } else {
      confirmButton.disabled = true;
      confirmButton.classList.add('opacity-50', 'cursor-not-allowed');
    }
  }

  function processPayment() {
    const paymentMethod = document.querySelector('input[name="payment-method"]:checked').value;
    const confirmButton = document.getElementById('confirm-payment');

    if (paymentMethod === 'cash') {
      const cashReceived = parseFloat(document.getElementById('cash-received').value) || 0;
      if (cashReceived < currentPaymentData.total) {
        alert('Số tiền khách đưa không đủ!');
        return;
      }
    }

    // Show loading state
    confirmButton.disabled = true;
    confirmButton.innerHTML = `
      <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      Đang xử lý...
    `;

    // Simulate payment processing
    setTimeout(() => {
      // Reset button
      confirmButton.disabled = false;
      confirmButton.innerHTML = 'Xác nhận thanh toán';

      // Process payment
      alert(`Thanh toán thành công bằng ${getPaymentMethodName(paymentMethod)}!`);

      // Clear cart and close modal
      if (typeof window.clearCart === 'function') {
        window.clearCart();
      }
      hidePaymentModal();

      // Print receipt (optional)
      if (confirm('Bạn có muốn in hóa đơn?')) {
        printReceipt();
      }
    }, 1500); // Simulate 1.5s processing time
  }

  function getPaymentMethodName(method) {
    const names = {
      'cash': 'tiền mặt',
      'card': 'thẻ',
      'transfer': 'chuyển khoản'
    };
    return names[method] || method;
  }

  function printReceipt() {
    // Simple receipt printing simulation
    const receiptWindow = window.open('', '_blank');
    receiptWindow.document.write(`
      <html>
        <head>
          <title>Hóa đơn bán hàng</title>
          <style>
            body { font-family: monospace; font-size: 12px; margin: 20px; }
            .center { text-align: center; }
            .right { text-align: right; }
            hr { border: none; border-top: 1px dashed #000; }
          </style>
        </head>
        <body>
          <div class="center">
            <h2>COMPUTERPOS PRO</h2>
            <p>Hóa đơn bán hàng</p>
            <p>Ngày: ${new Date().toLocaleDateString('vi-VN')}</p>
          </div>
          <hr>
          <p>Tạm tính: <span class="right">${formatCurrency(currentPaymentData.subtotal)}</span></p>
          <p>Giảm giá: <span class="right">${formatCurrency(currentPaymentData.discount)}</span></p>
          <p>Thuế VAT: <span class="right">${formatCurrency(currentPaymentData.tax)}</span></p>
          <hr>
          <p><strong>Tổng cộng: <span class="right">${formatCurrency(currentPaymentData.total)}</span></strong></p>
          <hr>
          <div class="center">
            <p>Cảm ơn quý khách!</p>
          </div>
        </body>
      </html>
    `);
    receiptWindow.document.close();
    receiptWindow.print();
  }

  function formatCurrency(amount) {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
      minimumFractionDigits: 0
    }).format(amount).replace('₫', '') + '₫';
  }

  // Event listeners
  document.getElementById('close-payment-modal')?.addEventListener('click', hidePaymentModal);
  document.getElementById('cancel-payment')?.addEventListener('click', hidePaymentModal);
  document.getElementById('confirm-payment')?.addEventListener('click', processPayment);
  document.getElementById('cash-received')?.addEventListener('input', calculateChange);

  // Payment method radio buttons
  document.querySelectorAll('input[name="payment-method"]').forEach(radio => {
    radio.addEventListener('change', function() {
      showPaymentMethod(this.value);
    });
  });

  // Make function global
  window.showPaymentModal = showPaymentModal;
</script>